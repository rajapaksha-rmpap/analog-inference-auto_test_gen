# Assembler for Chip - Output Processor 
# Output uP Assembly Code 
0:NOP # 
1:MOV,r448,1 # # Init process count 
2:MOV,r449,0 ## Initialize current process id
3:MOV,r492,1 # # Initialize address offset reg
4:LLSHIFT,r492,r492,23 # 
5:MOV,r471,9 # # Initialize base address offset reg
6:LLSHIFT,r471,r471,20 # 
7:MOV,r480,8204 # 
8:OR,r480,r494,r492 # # Initialize Output DMA bsy address reg
9:MOV,r480,8200 # 
10:OR,r480,r493,r492 # # Initialize Output DMA enable address reg
11:MOV,r480,12300 # 
12:OR,r480,r496,r492 # # Initialize Prefetch DMA bsy address reg
13:MOV,r480,12296 # 
14:OR,r480,r495,r492 # # Initialize Prefetch DMA enable address reg
15:MOV,r491,0 ## Initialize grab status reg
16:MOV,r468,0 ## Initialize image end status reg
17:MOV,r470,0 ## Initialize context switch reg
18:MOV,r488,1 ## Initialize current process id
19:LLSHIFTREG,r488,r488,r448 # 
20:SUBI,r488,r488,1 # 
21:MOV,r450,26 # # store proc0 start loc
22:MOV,r460,26 # # store proc0 last loc  
23:NOP #
24:NOP #
25:NOP #
26:NOP #
27:NOP #
28:NOP #
29:NOP #
30:NOP #
31:NOP #
32:NOP #
33:NOP #
34:NOP #
35:NOP #
36:NOP #
37:MOV,r449,0 ## curr proc id
# Switch to proc id
38:ADDI,r449,r510,0 # 
39:SUBI,r510,r510,0 # 
40:BRANZ,2 # 
41:BRAREG,r460 ## branch to counter proc 0 
42:SUBI,r510,r510,1 # 
43:BRANZ,2 # 
44:BRAREG,r461 ## branch to counter proc 1 
45:SUBI,r510,r510,1 # 
46:BRANZ,2 # 
47:BRAREG,r462 ## branch to counter proc 2 
48:SUBI,r510,r510,1 # 
49:BRANZ,2 # 
50:BRAREG,r463 ## branch to counter proc 3 
51:SUBI,r510,r510,1 # 
52:BRANZ,2 # 
53:BRAREG,r464 ## branch to counter proc 4 
54:SUBI,r510,r510,1 # 
55:BRANZ,2 # 
56:BRAREG,r465 ## branch to counter proc 5 
57:SUBI,r510,r510,1 # 
58:BRANZ,2 # 
59:BRAREG,r466 ## branch to counter proc 6 
60:SUBI,r510,r510,1 # 
61:BRANZ,2 # 
62:BRAREG,r467 ## branch to counter proc 7 
# Entry point for context switch
63:NOP # 
64:SUB,r448,r510,r449 # 
65:BRANZ,-27 # 
66:BRAUNCOND,-29 # 
# Layer Instruction Start
67:MOV,r4,0 # 
68:MOV,r480,768 # 
69:LLSHIFT,r480,r480,16 # 
70:OR,r4,r4,r480 # 
71:MOV,r43,2 # 
72:MOV,r480,0 # 
73:LLSHIFT,r480,r480,16 # 
74:OR,r43,r43,r480 # 
75:MOV,r24,0 # 
76:MOV,r46,65024 # 
77:MOV,r480,799 # 
78:LLSHIFT,r480,r480,16 # 
79:OR,r46,r46,r480 # 
80:MOV,r47,65028 # 
81:MOV,r480,799 # 
82:LLSHIFT,r480,r480,16 # 
83:OR,r47,r47,r480 # 
84:LOAD,r46,r44 ##Start INIT_WRITE_DATA_STRUCT 
85:LOAD,r47,r45 ##End INIT_WRITE_DATA_STRUCT
86:MOV,r33,128 # 
87:MOV,r480,784 # 
88:LLSHIFT,r480,r480,16 # 
89:OR,r33,r33,r480 # 
90:MOV,r480,0 # # start STORE_TO_MEMORY 
91:STORE,r33,r480 # # end STORE_TO_MEMORY - write data to address
92:MOV,r1,64 # 
93:MOV,r2,8 # 
94:MOV,r41,132 # 
95:MOV,r480,4280 # 
96:LLSHIFT,r480,r480,16 # 
97:OR,r41,r41,r480 # 
98:MOV,r58,224 # 
99:MOV,r480,0 # 
100:LLSHIFT,r480,r480,16 # 
101:OR,r58,r58,r480 # 
102:MOV,r35,0 # 
103:MOV,r480,4280 # 
104:LLSHIFT,r480,r480,16 # 
105:OR,r35,r35,r480 # 
106:MOV,r36,4 # 
107:MOV,r480,4280 # 
108:LLSHIFT,r480,r480,16 # 
109:OR,r36,r36,r480 # 
110:MOV,r50,140 # 
111:MOV,r480,4280 # 
112:LLSHIFT,r480,r480,16 # 
113:OR,r50,r50,r480 # 
114:MOV,r51,52 # 
115:MOV,r480,4280 # 
116:LLSHIFT,r480,r480,16 # 
117:OR,r51,r51,r480 # 
118:MOV,r52,136 # 
119:MOV,r480,4280 # 
120:LLSHIFT,r480,r480,16 # 
121:OR,r52,r52,r480 # 
122:MOV,r53,28 # 
123:MOV,r480,4280 # 
124:LLSHIFT,r480,r480,16 # 
125:OR,r53,r53,r480 # 
126:MOV,r59,48 # 
127:MOV,r480,4280 # 
128:LLSHIFT,r480,r480,16 # 
129:OR,r59,r59,r480 # 
130:MOV,r54,32 # 
131:MOV,r480,4280 # 
132:LLSHIFT,r480,r480,16 # 
133:OR,r54,r54,r480 # 
134:MOV,r55,36 # 
135:MOV,r480,4280 # 
136:LLSHIFT,r480,r480,16 # 
137:OR,r55,r55,r480 # 
138:MOV,r56,40 # 
139:MOV,r480,4280 # 
140:LLSHIFT,r480,r480,16 # 
141:OR,r56,r56,r480 # 
142:MOV,r57,44 # 
143:MOV,r480,4280 # 
144:LLSHIFT,r480,r480,16 # 
145:OR,r57,r57,r480 # 
146:MOV,r483,1 # 
147:STORE,r35,r483 # 
148:MOV,r483,2 # 
149:STORE,r59,r483 # 
150:MOV,r483,0 # 
151:STORE,r51,r483 # 
152:MOV,r484,82 # 
153:STORE,r52,r484 ##End SET_PCI_DMA_REGS 
154:MOV,r42,1 # 
155:MOV,r60,1 # 
156:MOV,r5,0 # 
157:MOV,r6,1 # 
158:MOV,r7,1088 # 
159:MOV,r10,1172 # 
160:MOV,r9,0 # 
161:MOV,r11,0 # 
162:MOV,r12,1 # 
163:MOV,r14,16384 # 
164:MOV,r15,67108124 # 
165:ADDI,r5,r5,1 # 
166:MOV,r8,1 # 
167:ADDI,r2,r3,0 # 
168:SUB,r3,r3,r8 # 
169:BRAGEZ,2 # 
170:ADDI,r2,r8,0 # 
171:MOV,r16,1 # 
172:ADDI,r4,r17,0 # 
173:ADDI,r44,r18,0 # 
174:ADDI,r16,r19,0 # 
175:MOV,r1,64 # 
176:SUBI,r3,r3,0 # 
177:BRAGEZ,2 # 
178:MOV,r1,0 # 
179:SUBI,r19,r19,1 # 
180:BRALEZ,2 # 
181:BRAUNCOND,5 # 
182:MOV,r1,64 # 
183:SUBI,r3,r3,0 # 
184:BRAGEZ,2 # 
185:MOV,r1,0 # 
186:ADDI,r7,r482,84 ## Start START_INPUT_TFR_LAYER_CHECK 
187:OR,r482,r482,r492 # 
188:STORE,r482,r8 # # writre to ib_decr_reg
189:OR,r7,r481,r492 # 
190:ADDI,r481,r482,88 # 
191:LOAD,r482,r483 # # read ib_cntr_reg 
192:SUB,r483,r482,r8 # 
193:BRAGEZ,4 # 
194:MOV,r460,145 # 
195:MOV,r449,1 # 
196:BRAUNCOND,-133 # 
197:OR,r7,r481,r492 # 
198:ADDI,r481,r482,104 # 
199:LOAD,r482,r483 # #read ob_cntr_reg 
200:ADDI,r481,r482,96 # 
201:LOAD,r482,r484 # # read ob_full_lvl_reg 
202:SUB,r484,r482,r483 # 
203:SUB,r482,r482,r8 # 
204:BRAGEZ,4 # 
205:MOV,r460,156 # 
206:MOV,r449,1 # 
207:BRAUNCOND,-144 ## End START_INPUT_TFR_LAYER_CHECK 
208:MOV,r19,1 # 
209:ADDI,r17,r23,0 # 
210:MOV,r486,16383 # 
211:AND,r23,r23,r486 # 
212:ADDI,r23,r21,0 # 
213:ADD,r21,r21,r1 # 
214:SUB,r21,r21,r14 # 
215:BRALEZ,2 # 
216:BRAUNCOND,19 # 
217:MOV,r481,1 # #Start START_EXTERNAL_IO 
218:STORE,r50,r481 # 
219:LOAD,r50,r481 # 
220:STORE,r53,r1 # 
221:STORE,r54,r17 # 
222:STORE,r55,r43 # 
223:STORE,r56,r18 # 
224:STORE,r57,r45 # 
225:MOV,r481,1 # 
226:STORE,r36,r481 ##End START_EXTERNAL_IO 
227:OR,r58,r58,r492 # #Start EXTERNAL_IO_DONE 
228:LOAD,r58,r481 # 
229:AND,r481,r481,r60 # 
230:BRANZ,4 # 
231:MOV,r460,186 # 
232:MOV,r449,1 # 
233:BRAUNCOND,-170 # End EXTERNAL_IO_DONE 
234:BRAUNCOND,42 # 
235:MOV,r25,16384 # 
236:SUB,r25,r25,r23 # 
237:MOV,r481,1 # #Start START_EXTERNAL_IO 
238:STORE,r50,r481 # 
239:LOAD,r50,r481 # 
240:STORE,r53,r25 # 
241:STORE,r54,r17 # 
242:STORE,r55,r43 # 
243:STORE,r56,r18 # 
244:STORE,r57,r45 # 
245:MOV,r481,1 # 
246:STORE,r36,r481 ##End START_EXTERNAL_IO 
247:OR,r58,r58,r492 # #Start EXTERNAL_IO_DONE 
248:LOAD,r58,r481 # 
249:AND,r481,r481,r60 # 
250:BRANZ,4 # 
251:MOV,r460,206 # 
252:MOV,r449,1 # 
253:BRAUNCOND,-190 # End EXTERNAL_IO_DONE 
254:ADDI,r18,r26,0 # 
255:ADD,r26,r26,r25 # 
256:ADDI,r17,r27,0 # 
257:MOV,r486,-16384 # 
258:AND,r27,r27,r486 # 
259:MOV,r481,1 # #Start START_EXTERNAL_IO 
260:STORE,r50,r481 # 
261:LOAD,r50,r481 # 
262:STORE,r53,r21 # 
263:STORE,r54,r27 # 
264:STORE,r55,r43 # 
265:STORE,r56,r26 # 
266:STORE,r57,r45 # 
267:MOV,r481,1 # 
268:STORE,r36,r481 ##End START_EXTERNAL_IO 
269:OR,r58,r58,r492 # #Start EXTERNAL_IO_DONE 
270:LOAD,r58,r481 # 
271:AND,r481,r481,r60 # 
272:BRANZ,4 # 
273:MOV,r460,228 # 
274:MOV,r449,1 # 
275:BRAUNCOND,-212 # End EXTERNAL_IO_DONE 
276:ADDI,r17,r20,0 # 
277:ADD,r20,r20,r1 # 
278:MOV,r486,16383 # 
279:AND,r20,r20,r486 # 
280:MOV,r486,-16384 # 
281:AND,r17,r17,r486 # 
282:ADD,r17,r17,r20 # 
283:ADD,r18,r18,r1 # 
284:SUBI,r16,r16,1 # 
285:BRALEZ,2 # 
286:BRAUNCOND,-107 # 
287:MOV,r22,1 # 
288:ADDI,r8,r3,0 # 
289:MOV,r13,1 # 
290:OR,r10,r480,r492 # 
291:STORE,r480,r22 # 
292:MOV,r481,1028 # 
293:OR,r481,r481,r492 # 
294:STORE,r481,r6 # # End POP_SYNC - write to ib_decr_reg
295:MOV,r481,1032 ## Start SEND_SYNC_PREV 
296:OR,r481,r481,r492 # 
297:STORE,r481,r6 ## End SEND_SYNC_PREV - write to asq_send_reg
298:MOV,r482,1048 ## Start SEND_SYNC_NEXT 
299:OR,r482,r482,r492 # 
300:STORE,r482,r6 # # End SEND_SYNC_NEXT
301:MOV,r481,1044 # # Start END_BLOCK_EXTERNAL 
302:OR,r481,r481,r492 # 
303:STORE,r481,r6 ## write to ob_incr_reg - End END_BLOCK_EXTERNAL 
304:SUBI,r3,r3,1 # 
305:BRALEZ,2 # 
306:BRAUNCOND,-16 # 
307:ADD,r44,r44,r1 # 
308:ADD,r24,r24,r1 # 
309:MOV,r486,16383 # 
310:AND,r24,r24,r486 # 
311:MOV,r486,-16384 # 
312:AND,r4,r4,r486 # 
313:ADD,r4,r4,r24 # 
314:SUBI,r2,r2,1 # 
315:BRALEZ,2 # 
316:BRAUNCOND,-153 # 
317:MOV,r28,1 # 
318:MOV,r29,0 # 
319:MOV,r30,1192 # 
320:MOV,r31,1 # 
321:MOV,r33,128 # 
322:MOV,r480,784 # 
323:LLSHIFT,r480,r480,16 # 
324:OR,r33,r33,r480 # 
325:NOP ##Start SET_UP_NEXT 
326:NOP # 
327:NOP # 
328:MOV,r460,35 # 
329:MOV,r449,0 # 
330:BRAUNCOND,-267 # #Branch to the same layer, instruction start location
331:NOP # 
332:NOP # 
333:NOP # 
334:NOP # 
335:HALT # 
336:NOP ##End SET_UP_NEXT 
